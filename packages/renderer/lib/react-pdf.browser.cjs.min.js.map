{"version":3,"file":"react-pdf.browser.cjs.min.js","sources":["../src/index.js","../src/utils/propsEqual.js","../src/renderer.js","../src/dom/usePDF.js","../src/dom/PDFViewer.js","../src/dom/BlobProvider.js","../src/dom/PDFDownloadLink.js","../src/dom/index.js"],"sourcesContent":["import FontStore from '@react-pdf/font';\r\nimport renderPDF from '@react-pdf/render';\r\nimport PDFDocument from '@react-pdf/pdfkit';\r\nimport layoutDocument from '@react-pdf/layout';\r\n\r\nimport createRenderer from './renderer';\r\nimport { version } from '../package.json';\r\n\r\nconst fontStore = new FontStore();\r\n\r\n// We must keep a single renderer instance, otherwise React will complain\r\nlet renderer;\r\n\r\n// The pdf instance acts as an event emitter for DOM usage.\r\n// We only want to trigger an update when PDF content changes\r\nconst events = {};\r\n\r\nconst pdf = initialValue => {\r\n  const onChange = () => {\r\n    const listeners = events.change?.slice() || [];\r\n    for (let i = 0; i < listeners.length; i += 1) listeners[i]();\r\n  };\r\n\r\n  const container = { type: 'ROOT', document: null };\r\n  renderer = renderer || createRenderer({ onChange });\r\n  const mountNode = renderer.createContainer(container);\r\n\r\n  const updateContainer = doc => {\r\n    renderer.updateContainer(doc, mountNode, null);\r\n  };\r\n\r\n  if (initialValue) updateContainer(initialValue);\r\n\r\n  const render = async (compress = true) => {\r\n    const props = container.document.props || {};\r\n    const { pdfVersion, language, pageLayout, pageMode } = props;\r\n\r\n    const ctx = new PDFDocument({\r\n      compress,\r\n      pdfVersion,\r\n      lang: language,\r\n      displayTitle: true,\r\n      autoFirstPage: false,\r\n      pageLayout,\r\n      pageMode,\r\n    });\r\n\r\n    const layout = await layoutDocument(container.document, fontStore);\r\n\r\n    return renderPDF(ctx, layout);\r\n  };\r\n\r\n  const callOnRender = (params = {}) => {\r\n    if (container.document.props.onRender) {\r\n      container.document.props.onRender(params);\r\n    }\r\n  };\r\n\r\n  const toBlob = async () => {\r\n    const chunks = [];\r\n    const instance = await render();\r\n\r\n    return new Promise((resolve, reject) => {\r\n      instance.on('data', chunk => {\r\n        chunks.push(\r\n          chunk instanceof Uint8Array ? chunk : new Uint8Array(chunk),\r\n        );\r\n      });\r\n\r\n      instance.on('end', () => {\r\n        try {\r\n          const blob = new Blob(chunks, { type: 'application/pdf' });\r\n          callOnRender({ blob });\r\n          resolve(blob);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  const toBuffer = async () => {\r\n    callOnRender();\r\n    return render();\r\n  };\r\n\r\n  const toString = async () => {\r\n    let result = '';\r\n    const instance = await render(false); // For some reason, when rendering to string if compress=true the document is blank\r\n\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        instance.on('data', buffer => {\r\n          result += buffer;\r\n        });\r\n\r\n        instance.on('end', () => {\r\n          callOnRender();\r\n          resolve(result);\r\n        });\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    });\r\n  };\r\n\r\n  const on = (event, listener) => {\r\n    if (!events[event]) events[event] = [];\r\n    events[event].push(listener);\r\n  };\r\n\r\n  const removeListener = (event, listener) => {\r\n    if (!events[event]) return;\r\n    const idx = events[event].indexOf(listener);\r\n    if (idx > -1) events[event].splice(idx, 1);\r\n  };\r\n\r\n  return {\r\n    on,\r\n    container,\r\n    toBlob,\r\n    toBuffer,\r\n    toString,\r\n    removeListener,\r\n    updateContainer,\r\n  };\r\n};\r\n\r\nconst Font = fontStore;\r\n\r\nconst StyleSheet = {\r\n  create: s => s,\r\n};\r\n\r\nexport { version, Font, StyleSheet, pdf, createRenderer };\r\n","/* eslint-disable no-continue */\r\n\r\n/**\r\n * Checks if two sets of props are equal (recursively)\r\n *\r\n * @param {Object} props A\r\n * @param {Object} props B\r\n * @returns {Boolean} props equals?\r\n *\r\n */\r\nconst propsEqual = (a, b) => {\r\n  const oldPropsKeys = Object.keys(a);\r\n  const newPropsKeys = Object.keys(b);\r\n\r\n  if (oldPropsKeys.length !== newPropsKeys.length) {\r\n    return false;\r\n  }\r\n\r\n  for (let i = 0; i < oldPropsKeys.length; i += 1) {\r\n    const propName = oldPropsKeys[i];\r\n\r\n    if (propName === 'render' && !a[propName] !== !b[propName]) {\r\n      return false;\r\n    }\r\n\r\n    if (propName !== 'children' && a[propName] !== b[propName]) {\r\n      if (\r\n        typeof a[propName] === 'object' &&\r\n        typeof b[propName] === 'object' &&\r\n        propsEqual(a[propName], b[propName])\r\n      ) {\r\n        continue;\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      propName === 'children' &&\r\n      (typeof a[propName] === 'string' || typeof b[propName] === 'string')\r\n    ) {\r\n      return a[propName] === b[propName];\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nexport default propsEqual;\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-param-reassign */\r\n\r\nimport ReactFiberReconciler from 'react-reconciler';\r\nimport {\r\n  unstable_scheduleCallback as schedulePassiveEffects,\r\n  unstable_cancelCallback as cancelPassiveEffects,\r\n} from 'scheduler';\r\n\r\nimport propsEqual from './utils/propsEqual';\r\n\r\nconst emptyObject = {};\r\n\r\nconst appendChild = (parentInstance, child) => {\r\n  const isParentText = parentInstance.type === 'TEXT';\r\n  const isChildTextInstance = child.type === 'TEXT_INSTANCE';\r\n  const isOrphanTextInstance = isChildTextInstance && !isParentText;\r\n\r\n  // Ignore orphan text instances.\r\n  // Caused by cases such as <>{name && <Text>{name}</Text>}</>\r\n  if (isOrphanTextInstance) {\r\n    console.warn(\r\n      `Invalid '${child.value}' string child outside <Text> component`,\r\n    );\r\n    return;\r\n  }\r\n\r\n  parentInstance.children.push(child);\r\n};\r\n\r\nconst createRenderer = ({ onChange = () => {} }) => {\r\n  return ReactFiberReconciler({\r\n    schedulePassiveEffects,\r\n\r\n    cancelPassiveEffects,\r\n\r\n    supportsMutation: true,\r\n\r\n    isPrimaryRenderer: false,\r\n\r\n    warnsIfNotActing: false,\r\n\r\n    appendInitialChild: appendChild,\r\n\r\n    createInstance(type, { style, children, ...props }) {\r\n      return {\r\n        type,\r\n        box: {},\r\n        style: style || {},\r\n        props: props || {},\r\n        children: [],\r\n      };\r\n    },\r\n\r\n    createTextInstance(text, rootContainerInstance) {\r\n      return { type: 'TEXT_INSTANCE', value: text };\r\n    },\r\n\r\n    finalizeInitialChildren(element, type, props) {\r\n      return false;\r\n    },\r\n\r\n    getPublicInstance(instance) {\r\n      return instance;\r\n    },\r\n\r\n    prepareForCommit() {\r\n      // Noop\r\n    },\r\n\r\n    clearContainer() {\r\n      // Noop\r\n    },\r\n\r\n    prepareUpdate(element, type, oldProps, newProps) {\r\n      return !propsEqual(oldProps, newProps);\r\n    },\r\n\r\n    resetAfterCommit: onChange,\r\n\r\n    resetTextContent(element) {\r\n      // Noop\r\n    },\r\n\r\n    getRootHostContext() {\r\n      return emptyObject;\r\n    },\r\n\r\n    getChildHostContext() {\r\n      return emptyObject;\r\n    },\r\n\r\n    shouldSetTextContent(type, props) {\r\n      return false;\r\n    },\r\n\r\n    now: Date.now,\r\n\r\n    useSyncScheduling: true,\r\n\r\n    appendChild,\r\n\r\n    appendChildToContainer(parentInstance, child) {\r\n      if (parentInstance.type === 'ROOT') {\r\n        parentInstance.document = child;\r\n      } else {\r\n        appendChild(parentInstance, child);\r\n      }\r\n    },\r\n\r\n    insertBefore(parentInstance, child, beforeChild) {\r\n      const index = parentInstance.children?.indexOf(beforeChild);\r\n\r\n      if (index === undefined) return;\r\n\r\n      if (index !== -1 && child)\r\n        parentInstance.children.splice(index, 0, child);\r\n    },\r\n\r\n    removeChild(parentInstance, child) {\r\n      const index = parentInstance.children?.indexOf(child);\r\n\r\n      if (index === undefined) return;\r\n\r\n      if (index !== -1) parentInstance.children.splice(index, 1);\r\n    },\r\n\r\n    removeChildFromContainer(parentInstance, child) {\r\n      const index = parentInstance.children?.indexOf(child);\r\n\r\n      if (index === undefined) return;\r\n\r\n      if (index !== -1) parentInstance.children.splice(index, 1);\r\n    },\r\n\r\n    commitTextUpdate(textInstance, oldText, newText) {\r\n      textInstance.value = newText;\r\n    },\r\n\r\n    commitUpdate(instance, updatePayload, type, oldProps, newProps) {\r\n      const { style, ...props } = newProps;\r\n      instance.props = props;\r\n      instance.style = style;\r\n    },\r\n  });\r\n};\r\n\r\nexport default createRenderer;\r\n","/* eslint-disable no-console */\r\n\r\nimport queue from 'queue';\r\nimport { useState, useRef, useEffect } from 'react';\r\n\r\nimport { pdf } from '../index';\r\n\r\nexport const usePDF = ({ document }) => {\r\n  const pdfInstance = useRef(null);\r\n\r\n  const [state, setState] = useState({\r\n    url: null,\r\n    blob: null,\r\n    error: null,\r\n    loading: false,\r\n  });\r\n\r\n  // Setup rendering queue\r\n  useEffect(() => {\r\n    const renderQueue = queue({ autostart: true, concurrency: 1 });\r\n\r\n    const queueDocumentRender = () => {\r\n      setState(prev => ({ ...prev, loading: true }));\r\n\r\n      renderQueue.splice(0, renderQueue.length, () =>\r\n        state.error ? Promise.resolve() : pdfInstance.current.toBlob(),\r\n      );\r\n    };\r\n\r\n    const onRenderFailed = error => {\r\n      console.error(error);\r\n      setState(prev => ({ ...prev, error }));\r\n    };\r\n\r\n    const onRenderSuccessful = blob => {\r\n      setState({\r\n        blob,\r\n        error: null,\r\n        loading: false,\r\n        url: URL.createObjectURL(blob),\r\n      });\r\n    };\r\n\r\n    pdfInstance.current = pdf();\r\n    pdfInstance.current.on('change', queueDocumentRender);\r\n    pdfInstance.current.updateContainer(document);\r\n\r\n    renderQueue.on('error', onRenderFailed);\r\n    renderQueue.on('success', onRenderSuccessful);\r\n\r\n    return () => {\r\n      renderQueue.end();\r\n      pdfInstance.current.removeListener('change', queueDocumentRender);\r\n    };\r\n  }, []);\r\n\r\n  // Revoke old unused url instances\r\n  useEffect(() => {\r\n    return () => {\r\n      if (state.url) {\r\n        URL.revokeObjectURL(state.url);\r\n      }\r\n    };\r\n  }, [state.url]);\r\n\r\n  const update = () => {\r\n    pdfInstance.current.updateContainer(document);\r\n  };\r\n\r\n  return [state, update];\r\n};\r\n\r\nexport default usePDF;\r\n","/* eslint-disable no-console */\r\n/* eslint-disable react/jsx-props-no-spreading */\r\n\r\nimport React, { useEffect } from 'react';\r\n\r\nimport usePDF from './usePDF';\r\n\r\nexport const PDFViewer = ({\r\n  title,\r\n  style,\r\n  className,\r\n  children,\r\n  innerRef,\r\n  showToolbar = true,\r\n  ...props\r\n}) => {\r\n  const [instance, updateInstance] = usePDF({ document: children });\r\n\r\n  useEffect(updateInstance, [children]);\r\n\r\n  const src = instance.url\r\n    ? `${instance.url}#toolbar=${showToolbar ? 1 : 0}`\r\n    : null;\r\n\r\n  return (\r\n    <iframe\r\n      src={src}\r\n      title={title}\r\n      ref={innerRef}\r\n      style={style}\r\n      className={className}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PDFViewer;\r\n","/* eslint-disable no-console */\r\n\r\nimport { useEffect } from 'react';\r\n\r\nimport usePDF from './usePDF';\r\n\r\nexport const BlobProvider = ({ document: doc, children }) => {\r\n  const [instance, updateInstance] = usePDF({ document: doc });\r\n\r\n  useEffect(updateInstance, [doc]);\r\n\r\n  if (!doc) {\r\n    console.warn('You should pass a valid document to BlobProvider');\r\n    return null;\r\n  }\r\n\r\n  return children(instance);\r\n};\r\n\r\nexport default BlobProvider;\r\n","/* eslint-disable no-console */\r\n\r\nimport React, { useEffect } from 'react';\r\n\r\nimport usePDF from './usePDF';\r\n\r\nexport const PDFDownloadLink = ({\r\n  style,\r\n  children,\r\n  className,\r\n  document: doc,\r\n  fileName = 'document.pdf',\r\n  onClick,\r\n}) => {\r\n  const [instance, updateInstance] = usePDF({ document: doc });\r\n\r\n  useEffect(updateInstance, [children]);\r\n\r\n  if (!doc) {\r\n    console.warn('You should pass a valid document to PDFDownloadLink');\r\n    return null;\r\n  }\r\n\r\n  const handleDownloadIE = () => {\r\n    if (window.navigator.msSaveBlob) {\r\n      // IE\r\n      window.navigator.msSaveBlob(instance.blob, fileName);\r\n    }\r\n  };\r\n\r\n  const handleClick = event => {\r\n    handleDownloadIE();\r\n    if (typeof onClick === 'function') onClick(event, instance);\r\n  };\r\n\r\n  return (\r\n    <a\r\n      style={style}\r\n      href={instance.url}\r\n      download={fileName}\r\n      className={className}\r\n      onClick={handleClick}\r\n    >\r\n      {typeof children === 'function' ? children(instance) : children}\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default PDFDownloadLink;\r\n","import * as primitives from '@react-pdf/primitives';\r\n\r\nimport usePDF from './usePDF';\r\nimport PDFViewer from './PDFViewer';\r\nimport BlobProvider from './BlobProvider';\r\nimport PDFDownloadLink from './PDFDownloadLink';\r\nimport { pdf, version, Font, StyleSheet } from '../index';\r\n\r\nconst throwEnvironmentError = name => {\r\n  throw new Error(\r\n    `${name} is a Node specific API. You're either using this method in a browser, or your bundler is not loading react-pdf from the appropriate web build.`,\r\n  );\r\n};\r\n\r\nexport const renderToStream = () => {\r\n  throwEnvironmentError('renderToStream');\r\n};\r\n\r\nexport const renderToString = () => {\r\n  throwEnvironmentError('renderToString');\r\n};\r\n\r\nexport const renderToFile = () => {\r\n  throwEnvironmentError('renderToFile');\r\n};\r\n\r\nexport const render = () => {\r\n  throwEnvironmentError('render');\r\n};\r\n\r\nexport * from '../index';\r\n\r\nexport * from './usePDF';\r\n\r\nexport * from './PDFViewer';\r\n\r\nexport * from './BlobProvider';\r\n\r\nexport * from './PDFDownloadLink';\r\n\r\nexport * from '@react-pdf/primitives';\r\n\r\nexport default {\r\n  pdf,\r\n  usePDF,\r\n  Font,\r\n  version,\r\n  StyleSheet,\r\n  PDFViewer,\r\n  BlobProvider,\r\n  PDFDownloadLink,\r\n  renderToStream,\r\n  renderToString,\r\n  renderToFile,\r\n  render,\r\n  ...primitives,\r\n};\r\n"],"names":["renderer","propsEqual","a","b","oldPropsKeys","Object","keys","newPropsKeys","length","i","propName","emptyObject","appendChild","parentInstance","child","isParentText","type","children","push","console","warn","value","createRenderer","onChange","ReactFiberReconciler","schedulePassiveEffects","cancelPassiveEffects","supportsMutation","isPrimaryRenderer","warnsIfNotActing","appendInitialChild","createInstance","style","box","props","createTextInstance","text","rootContainerInstance","finalizeInitialChildren","element","getPublicInstance","instance","prepareForCommit","clearContainer","prepareUpdate","oldProps","newProps","resetAfterCommit","resetTextContent","getRootHostContext","getChildHostContext","shouldSetTextContent","now","Date","useSyncScheduling","appendChildToContainer","document","insertBefore","beforeChild","index","_parentInstance$child","indexOf","undefined","splice","removeChild","_parentInstance$child2","removeChildFromContainer","_parentInstance$child3","commitTextUpdate","textInstance","oldText","newText","commitUpdate","updatePayload","fontStore","FontStore","events","pdf","initialValue","container","mountNode","listeners","change","slice","createContainer","updateContainer","doc","render","compress","pdfVersion","language","pageLayout","pageMode","ctx","PDFDocument","lang","displayTitle","autoFirstPage","layoutDocument","layout","renderPDF","callOnRender","params","onRender","toBlob","chunks","Promise","resolve","reject","on","chunk","Uint8Array","blob","Blob","error","toBuffer","toString","result","buffer","event","listener","removeListener","idx","Font","StyleSheet","create","s","usePDF","pdfInstance","useRef","useState","url","loading","state","setState","useEffect","renderQueue","queue","autostart","concurrency","queueDocumentRender","prev","current","URL","createObjectURL","end","revokeObjectURL","PDFViewer","title","className","innerRef","showToolbar","updateInstance","src","React","ref","BlobProvider","PDFDownloadLink","fileName","onClick","href","download","window","navigator","msSaveBlob","throwEnvironmentError","name","Error","renderToStream","renderToString","renderToFile","version","primitives"],"mappings":"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"}